@inject IWatchlistService watchlistService

<div class="layout-container">
    <SfDashboardLayout Columns=5 CellSpacing="@(new double[]{0, 0})" CellAspectRatio="1" AllowDragging="false">
        <DashboardLayoutEvents Created="OnCreate"></DashboardLayoutEvents>
        <DashboardLayoutPanels>
            <DashboardLayoutPanel Column=0 Row=0 Id="InfoPanel" SizeX=4 SizeY=1>
                <ContentTemplate>
                    <div class="info-container">
                        <div class="grid-component">
                            <p>@stock.name (@stock.ticker)</p>
                            @if (stock.homepage_url != null)
                            {
                                <p>Homepage: @stock.homepage_url</p>
                            }
                            @if (stock.phone_number != null)
                            {
                                <p>Phone number: @stock.phone_number</p>
                            }
                            @if (stock.phone_number != null)
                            {
                                <p>Category: @stock.sic_description</p>
                            }
                        </div>
                        <div class="img-container">
                            @if (stock.branding != null)
                            {
                                <img src="@stock.branding.logo_url" class="icon" />
                            }
                        </div>
                    </div>
                </ContentTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel Column=4 Row=0>
                <ContentTemplate>
                    <div class="button-container">
                        <SfButton CssClass="e-custom-add" @ref="AddButton" @onclick="AddtoWatchlist">+</SfButton>
                        <SfButton CssClass="e-custom-watchlist" @ref="AddButton" @onclick="GoToWatchlist">WATCHLIST
                        </SfButton>
                    </div>
                </ContentTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel Column=0 Row=2 SizeX=3 SizeY=2>
                <ContentTemplate>
                    <SfStockChart Title="Stock price" EnableSelector="false" @ref="stockChartObj">
                        <StockChartTooltipSettings Enable="true"></StockChartTooltipSettings>
                        <StockChartPeriods>
                            <StockChartPeriod IntervalType=RangeIntervalType.Days Interval="7" Text="7D">
                            </StockChartPeriod>
                            <StockChartPeriod IntervalType=RangeIntervalType.Days Interval="14" Text="14D">
                            </StockChartPeriod>
                            <StockChartPeriod IntervalType=RangeIntervalType.Days Interval="30" Text="30D">
                            </StockChartPeriod>
                            <StockChartPeriod IntervalType=RangeIntervalType.Days Interval="90" Text="90D">
                            </StockChartPeriod>
                        </StockChartPeriods>
                        <StockChartPrimaryXAxis>
                            <StockChartAxisMajorGridLines Color="Transparent"></StockChartAxisMajorGridLines>
                        </StockChartPrimaryXAxis>
                        <StockChartSeriesCollection>
                            <StockChartSeries DataSource="@stockPrices" Type="ChartSeriesType.HiloOpenClose"
                                XName="Date" High="h" Low="l" Open="o" Close="c" Volume="v">

                            </StockChartSeries>
                        </StockChartSeriesCollection>
                    </SfStockChart>
                </ContentTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel Column=4 Row=2 SizeX=2 SizeY=2>
                <ContentTemplate>
                    <div class="article-container">
                        <ul>
                            @for (int i = 0; i < Articles.Count; i++)
                            {
                                <li>
                                    <article>
                                        <h5><a href="@Articles[i].article_url">@Articles[i].title</a></h5>
                                        <img class="article-img" src="@Articles[i].image_url" alt="IMG" />
                                        <p class="article-text">@Articles[i].description</p>
                                    </article>
                                </li>
                            }
                        </ul>
                    </div>
                </ContentTemplate>
            </DashboardLayoutPanel>
        </DashboardLayoutPanels>
    </SfDashboardLayout>
</div>

<style>
    .layout-container {
        margin-top: 20px;
        padding-top: 20px;
    }

    .button-container {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .e-custom-watchlist {
        width: 100px;
        aspect-ratio: 2;
        border-radius: 12px;
        margin-left: 20px;
        margin-right: 20px;
    }

    .e-custom-add {
        width: 50px;
        aspect-ratio: 1;
        border-radius: 50%;
        margin-left: 20px;
        margin-right: 20px;
    }

    .e-dashboardlayout.e-control .e-panel {
        border: 4px solid;
        border-color: rgba(121, 39, 126, 0.3);
        box-shadow: none;
        border-radius: 0px;
    }

    .e-dashboardlayout.e-control .e-panel:hover {
        border: 4px solid;
        border-color: rgba(60, 63, 198, 0.53);
        border-radius: 0px;
    }

    .article-img {
        width: 150px;
        height: auto;
        float: left;
    }

    li {
        height: 200px;
    }

    .icon {
        height: 80px;
        width: auto;
    }

    .article-container {
        width: 100%;
        height: 100%;
    }

    .e-input-group.e-input-focus:not(.e-success):not(.e-warning):not(.e-error) {
        box-shadow: 0 0 0 4px rgba(196, 196, 196, .25);
    }
</style>

@code {
    [Parameter]
    public StockDetailsDTO stock { get; set; }
    [Parameter]
    public List<PriceDTO> stockPrices { get; set; }
    [Parameter]
    public NavigationManager navigator { get; set; }
    [Parameter]
    public List<ArticleDTO> Articles { get; set; }
    SfButton AddButton;
    SfStockChart stockChartObj;

    public async Task OnCreate()
    {
        await Task.Delay(200);
        this.stockChartObj.Refresh();

    }

    public void AddtoWatchlist()
    {
        watchlistService.AddToUserWatchlist(stock);
    }

    public void GoToWatchlist()
    {
        navigator.NavigateTo("/watchlist");
    }

}